# Generated by Django 2.1.3 on 2020-05-29 22:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('orcid_id', models.CharField(blank=True, help_text='Enter ORCID iD (if applicable)', max_length=19, null=True)),
                ('scopus_id', models.CharField(blank=True, help_text='Enter Scopus Author ID (if applicable)', max_length=19, null=True)),
                ('researcher_id', models.CharField(blank=True, help_text='Enter ResearcherID (if applicable)', max_length=19, null=True)),
                ('isni_id', models.CharField(blank=True, help_text='Enter ISNI (if applicable)', max_length=19, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=254)),
                ('abstract', models.TextField(max_length=2000)),
                ('year', models.IntegerField()),
                ('doi', models.CharField(blank=True, max_length=254, null=True)),
                ('pmid', models.CharField(blank=True, max_length=8, null=True)),
                ('magid', models.CharField(blank=True, max_length=254, null=True)),
                ('authors', models.ManyToManyField(to='matcher.Author')),
                ('disciplines', models.ManyToManyField(to='matcher.Discipline')),
                ('languages', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matcher.Language')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matcher.Discipline')),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='topics',
            field=models.ManyToManyField(to='matcher.Topic'),
        ),
        migrations.AddField(
            model_name='author',
            name='country',
            field=models.ManyToManyField(to='matcher.Country'),
        ),
        migrations.AddField(
            model_name='author',
            name='disciplines',
            field=models.ManyToManyField(to='matcher.Discipline'),
        ),
        migrations.AddField(
            model_name='author',
            name='institution',
            field=models.ManyToManyField(to='matcher.Institution'),
        ),
        migrations.AddField(
            model_name='author',
            name='languages',
            field=models.ManyToManyField(to='matcher.Language'),
        ),
        migrations.AddField(
            model_name='author',
            name='topics',
            field=models.ManyToManyField(to='matcher.Topic'),
        ),
    ]
